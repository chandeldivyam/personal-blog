---
import { getCollection } from 'astro:content';
import Base from '../layouts/Base.astro';
import ReadingTime from '../components/ReadingTime.astro';
import FeaturedPost from '../components/FeaturedPost.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../lib/config';
import { formatDate, readingTime } from '../lib/utils';

const posts = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Find featured post (first post with heroImage)
const featuredPost = posts.find((post) => post.data.heroImage);

// Get remaining recent posts (excluding featured post, limit to 3)
const recentPosts = featuredPost 
  ? posts.filter((post) => post.slug !== featuredPost.slug).slice(0, 3)
  : posts.slice(0, 3);

---

<Base title={SITE_TITLE} description={SITE_DESCRIPTION}>
  {featuredPost ? (
    <FeaturedPost post={featuredPost} />
  ) : (
    <div class="container">
      <section class="hero">
        <h1 class="hero-title">Welcome to My Blog</h1>
        <p class="hero-description">
          A minimal, fast, and modern blog built with Astro. 
          Here I share my thoughts on web development, technology, and life.
        </p>
      </section>
    </div>
  )}

  <div class="posts-container">

    <section class="recent-posts">
      {recentPosts.length > 0 ? (
        <div class="posts-grid">
          {recentPosts.map((post) => (
            <article class="post-card">
              <a href={`/blog/${post.slug}/`} class="post-card-link">
                {post.data.image ? (
                  <div class="post-image">
                    <img src={post.data.image.src} alt={post.data.title} />
                  </div>
                ) : (
                  <div class="post-image post-image-placeholder">
                    <div class="placeholder-content">
                      <span class="placeholder-icon">ðŸ“„</span>
                    </div>
                  </div>
                )}
                <div class="post-content">
                  <h3 class="post-title">
                    {post.data.title}
                  </h3>
                  <p class="post-description">
                    {post.data.description}
                  </p>
                  <div class="post-meta">
                    <div class="post-meta-left">
                      <time datetime={post.data.pubDate.toISOString()}>
                        {formatDate(post.data.pubDate)}
                      </time>
                    </div>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      ) : (
        <p class="no-posts">No posts yet. Check back soon!</p>
      )}
      
      {recentPosts.length > 0 && (
        <div class="view-all">
          <a href="/blog" class="view-all-link">View all posts â†’</a>
        </div>
      )}
    </section>
  </div>
</Base>

<style>
  .hero {
    text-align: center;
    margin-bottom: var(--space-xl);
    padding: var(--space-xl) 0;
  }

  .hero-title {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--space-md);
    line-height: var(--line-height-tight);
  }

  .hero-description {
    font-size: var(--font-size-lg);
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: var(--line-height-relaxed);
  }

  .posts-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-md);
  }

  .recent-posts {
    margin-top: var(--space-md);
    margin-bottom: var(--space-md);
  }

  .section-title {
    font-size: var(--font-size-2xl);
    margin-bottom: var(--space-lg);
    text-align: center;
  }

  .posts-grid {
    display: grid;
    gap: var(--space-lg);
    margin-bottom: var(--space-lg);
    grid-template-columns: 1fr;
    align-items: stretch;
  }

  .post-card {
    overflow: hidden;
    transition: all 0.2s ease;
    background: var(--color-bg);
  }


  .post-card-link {
    display: flex;
    flex-direction: column;
    height: 100%;
    color: inherit;
    text-decoration: none;
  }

  .post-card-link:hover {
    color: inherit;
    text-decoration: none;
  }

  .post-image {
    aspect-ratio: 4/3;
    overflow: hidden;
    background: var(--color-border);
    border-radius: var(--border-radius);
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s ease;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-image-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, var(--color-border) 0%, rgba(var(--color-border-rgb, 229, 231, 235), 0.5) 100%);
  }

  .placeholder-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    opacity: 0.6;
  }

  .placeholder-icon {
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }

  .post-content {
    padding: var(--space-sm) var(--space-md) var(--space-md);
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .post-title {
    margin-bottom: var(--space-xs);
    color: var(--color-text);
    font-size: var(--font-size-lg);
    font-weight: 600;
    line-height: 1.3;
  }

  .post-description {
    color: var(--color-text-secondary);
    margin-bottom: var(--space-sm);
    line-height: 1.4;
    font-size: 0.875rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    flex: 1;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--space-sm);
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin-top: auto;
  }

  .post-meta-left {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .separator {
    opacity: 0.5;
  }

  .post-tags {
    display: flex;
    gap: var(--space-xs);
  }

  .tag {
    background-color: var(--color-border);
    color: var(--color-text-secondary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius);
    font-size: 0.75rem;
    font-weight: 500;
  }

  .no-posts {
    text-align: center;
    color: var(--color-text-secondary);
    padding: var(--space-xl);
  }

  .view-all {
    text-align: center;
  }

  .view-all-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 500;
  }

  .view-all-link:hover {
    text-decoration: none;
    opacity: 0.8;
  }

  /* Mobile improvements */
  @media (max-width: 768px) {
    .hero {
      padding: var(--space-mobile-xl) 0;
      margin-bottom: var(--space-mobile-xl);
    }
    
    .hero-title {
      font-size: var(--font-size-mobile-3xl);
      margin-bottom: var(--space-mobile-md);
      line-height: 1.2;
    }
    
    .hero-description {
      font-size: var(--font-size-mobile-lg);
      line-height: var(--line-height-mobile-relaxed);
    }
    
    .recent-posts {
      margin-bottom: var(--space-mobile-xl);
    }
    
    .section-title {
      font-size: var(--font-size-mobile-2xl);
      margin-bottom: var(--space-mobile-lg);
    }
    
    .posts-container {
      padding: 0 var(--space-mobile-md);
    }
    
    .posts-grid {
      gap: var(--space-mobile-lg);
      margin-bottom: var(--space-mobile-lg);
      grid-template-columns: 1fr;
    }
    
    .post-content {
      padding: var(--space-mobile-md);
    }
    
    .post-title {
      font-size: var(--font-size-mobile-xl);
      margin-bottom: var(--space-mobile-sm);
    }
    
    .post-description {
      margin-bottom: var(--space-mobile-md);
      line-height: var(--line-height-mobile-relaxed);
    }
    
    .post-meta-left {
      gap: var(--space-mobile-sm);
    }
    
    .post-tags {
      gap: var(--space-mobile-sm);
    }
  }

  @media (min-width: 768px) {
    .posts-container {
      padding: 0 var(--space-lg);
    }
    
    .posts-grid {
      grid-template-columns: repeat(3, 1fr);
    }

    .hero-title {
      font-size: var(--font-size-4xl);
    }
  }
</style>
